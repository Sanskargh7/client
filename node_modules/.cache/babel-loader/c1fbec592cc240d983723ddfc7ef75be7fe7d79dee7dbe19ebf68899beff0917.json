{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TF\\\\Desktop\\\\Inbount\\\\client\\\\src\\\\components\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { useAuth } from \"../context/auth\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Spinner from \"./Spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Login = ({}) => {\n  _s();\n  const [auth, setAuth] = useAuth();\n  const [Otp, setOtp] = useState({});\n  const [Loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  const search = useLocation().search;\n  const id = new URLSearchParams(search).get(\"id\");\n  const exam_type = new URLSearchParams(search).get(\"exam-type\");\n\n  //event handler\n  const onChangeHandler = e => {\n    setOtp(e.target.value);\n  };\n  const getUserInfo = async () => {\n    try {\n      const {\n        data\n      } = await axios.post(\"https://assessment.inboundacademy.in/api/user/login\", {\n        id: id,\n        otp: Otp\n      });\n      if (data.success) {\n        // console.log(data);\n        toast.success(data.userInfo.message);\n        setAuth({\n          ...auth,\n          user: data.userInfo,\n          token: data.token\n        });\n\n        // console.log(auth);\n        localStorage.setItem(\"auth\", JSON.stringify(data));\n        navigate(`/question?exam-type=${exam_type}`);\n      } else {\n        toast.error(data.message);\n      }\n    } catch (error) {\n      toast.error(error.message);\n    }\n  };\n  const resendOtp = async () => {\n    try {\n      const {\n        data\n      } = await axios.post(\"https://assessment.inboundacademy.in/api/user/resend-otp\", {\n        id: id\n      });\n      if (data) {\n        const res = await axios.post(\"https://transfunnel.io/projects/hs_transfunnel/inbound_submission_api.php\", {\n          full_name: data.data.name,\n          phone: data.data.phone,\n          email: data.data.email\n        });\n        if (res) {\n          setOtp(\"\");\n          toast.success(\"OTP Resend Successfully\");\n        }\n      }\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  //login for  already exists user\n  const getUserInfoForExistsUser = async () => {\n    try {\n      const {\n        data\n      } = await axios.get(`http://localhost:4000/api/user/login/exist-user?id=${id}`);\n      if (data) {\n        setAuth({\n          ...auth,\n          user: data.userInfo,\n          token: data.token\n        });\n        setLoading(false);\n        console.log(auth);\n        localStorage.setItem(\"auth\", JSON.stringify(data));\n      } else {\n        toast.error(data.message);\n      }\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n  useEffect(() => {\n    getUserInfoForExistsUser();\n    //eslint-disable-next-line\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"otp_content text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Verify Mobile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please provide the OTP (One Time Password) that was sent for verification to your registered mobile number.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: onChangeHandler,\n        value: Otp,\n        type: \"text\",\n        placeholder: \"Enter OTP here\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        type: \"submit\",\n        onClick: getUserInfo,\n        children: \"VERIFY OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"otp_resend text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Check your Phone for the OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resendOtp,\n        className: \"btn\",\n        children: \"Resend OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Login, \"ALUsr84qCCF1LIoeU6KN+UvOxzc=\", false, function () {\n  return [useAuth, useNavigate, useLocation];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useLocation","useAuth","axios","toast","Spinner","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","auth","setAuth","Otp","setOtp","Loading","setLoading","navigate","search","id","URLSearchParams","get","exam_type","onChangeHandler","e","target","value","getUserInfo","data","post","otp","success","userInfo","message","user","token","localStorage","setItem","JSON","stringify","error","resendOtp","res","full_name","name","phone","email","console","log","getUserInfoForExistsUser","children","class","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","placeholder","required","className","onClick","_c","$RefreshReg$"],"sources":["C:/Users/TF/Desktop/Inbount/client/src/components/Login.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useAuth } from \"../context/auth\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Spinner from \"./Spinner\";\r\n\r\nconst Login = ({}) => {\r\n  const [auth, setAuth] = useAuth();\r\n  const [Otp, setOtp] = useState({});\r\n  const [Loading, setLoading] = useState(true);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const search = useLocation().search;\r\n  const id = new URLSearchParams(search).get(\"id\");\r\n  const exam_type = new URLSearchParams(search).get(\"exam-type\");\r\n\r\n  //event handler\r\n  const onChangeHandler = (e) => {\r\n    setOtp(e.target.value);\r\n  };\r\n  const getUserInfo = async () => {\r\n    try {\r\n      const { data } = await axios.post(\r\n        \"https://assessment.inboundacademy.in/api/user/login\",\r\n        {\r\n          id: id,\r\n          otp: Otp,\r\n        }\r\n      );\r\n      if (data.success) {\r\n        // console.log(data);\r\n        toast.success(data.userInfo.message);\r\n        setAuth({\r\n          ...auth,\r\n          user: data.userInfo,\r\n          token: data.token,\r\n        });\r\n\r\n        // console.log(auth);\r\n        localStorage.setItem(\"auth\", JSON.stringify(data));\r\n\r\n        navigate(`/question?exam-type=${exam_type}`);\r\n      } else {\r\n        toast.error(data.message);\r\n      }\r\n    } catch (error) {\r\n      toast.error(error.message);\r\n    }\r\n  };\r\n\r\n  const resendOtp = async () => {\r\n    try {\r\n      const { data } = await axios.post(\r\n        \"https://assessment.inboundacademy.in/api/user/resend-otp\",\r\n        {\r\n          id: id,\r\n        }\r\n      );\r\n      if (data) {\r\n        const res = await axios.post(\r\n          \"https://transfunnel.io/projects/hs_transfunnel/inbound_submission_api.php\",\r\n          {\r\n            full_name: data.data.name,\r\n            phone: data.data.phone,\r\n            email: data.data.email,\r\n          }\r\n        );\r\n        if (res) {\r\n          setOtp(\"\");\r\n          toast.success(\"OTP Resend Successfully\");\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  //login for  already exists user\r\n  const getUserInfoForExistsUser = async () => {\r\n    try {\r\n      const { data } = await axios.get(\r\n        `http://localhost:4000/api/user/login/exist-user?id=${id}`\r\n      );\r\n      if (data) {\r\n        setAuth({\r\n          ...auth,\r\n          user: data.userInfo,\r\n          token: data.token,\r\n        });\r\n        setLoading(false);\r\n        console.log(auth);\r\n        localStorage.setItem(\"auth\", JSON.stringify(data));\r\n      } else {\r\n        toast.error(data.message);\r\n      }\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getUserInfoForExistsUser();\r\n    //eslint-disable-next-line\r\n  }, [id]);\r\n  return (\r\n    <>\r\n      <div class=\"otp_content text-center\">\r\n        <h3>Verify Mobile</h3>\r\n        {/* <p>Enter the OTP (One Time Password) Sent to +91 {auth.user.phone}</p> */}\r\n        <p>\r\n          Please provide the OTP (One Time Password) that was sent for\r\n          verification to your registered mobile number.\r\n        </p>\r\n        <input\r\n          onChange={onChangeHandler}\r\n          value={Otp}\r\n          type=\"text\"\r\n          placeholder=\"Enter OTP here\"\r\n          required\r\n        />\r\n\r\n        {/* <input type=\"submit\" value=\"Verify OTP\" /> */}\r\n        <button className=\"btn\" type=\"submit\" onClick={getUserInfo}>\r\n          VERIFY OTP\r\n        </button>\r\n      </div>\r\n      <div class=\"otp_resend text-center\">\r\n        <p>Check your Phone for the OTP</p>\r\n        <button onClick={resendOtp} className=\"btn\">\r\n          Resend OTP\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}