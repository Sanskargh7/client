{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TF\\\\Desktop\\\\hubspotTest\\\\client\\\\src\\\\components\\\\Question.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizForm = () => {\n  _s();\n  const [selectedOptions, setSelectedOptions] = useState({});\n  const handleOptionSelect = (questionId, optionId) => {\n    setSelectedOptions(prevSelected => ({\n      ...prevSelected,\n      [questionId]: optionId\n    }));\n  };\n\n  // Example array of questions\n  const questions = [{\n    id: 1,\n    text: \"Question 1: What is...\",\n    options: [\"Option A\", \"Option B\", \"Option C\"]\n  }\n  // ... more questions ...\n  ];\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: questions.map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: question.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), question.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: `question-${question.id}`,\n          checked: selectedOptions[question.id] === index,\n          onChange: () => handleOptionSelect(question.id, index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this), option]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this))]\n    }, question.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizForm, \"dLRHIO/SyIp9lHMf8Crrz2iKqk4=\");\n_c = QuizForm;\nexport default QuizForm;\nvar _c;\n$RefreshReg$(_c, \"QuizForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","QuizForm","_s","selectedOptions","setSelectedOptions","handleOptionSelect","questionId","optionId","prevSelected","questions","id","text","options","children","map","question","fileName","_jsxFileName","lineNumber","columnNumber","option","index","type","name","checked","onChange","_c","$RefreshReg$"],"sources":["C:/Users/TF/Desktop/hubspotTest/client/src/components/Question.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst QuizForm = () => {\r\n  const [selectedOptions, setSelectedOptions] = useState({});\r\n\r\n  const handleOptionSelect = (questionId, optionId) => {\r\n    setSelectedOptions((prevSelected) => ({\r\n      ...prevSelected,\r\n      [questionId]: optionId,\r\n    }));\r\n  };\r\n\r\n  // Example array of questions\r\n  const questions = [\r\n    {\r\n      id: 1,\r\n      text: \"Question 1: What is...\",\r\n      options: [\"Option A\", \"Option B\", \"Option C\"],\r\n    },\r\n    // ... more questions ...\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      {questions.map((question) => (\r\n        <div key={question.id}>\r\n          <p>{question.text}</p>\r\n          {question.options.map((option, index) => (\r\n            <label key={index}>\r\n              <input\r\n                type=\"radio\"\r\n                name={`question-${question.id}`}\r\n                checked={selectedOptions[question.id] === index}\r\n                onChange={() => handleOptionSelect(question.id, index)}\r\n              />\r\n              {option}\r\n            </label>\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE1D,MAAMO,kBAAkB,GAAGA,CAACC,UAAU,EAAEC,QAAQ,KAAK;IACnDH,kBAAkB,CAAEI,YAAY,KAAM;MACpC,GAAGA,YAAY;MACf,CAACF,UAAU,GAAGC;IAChB,CAAC,CAAC,CAAC;EACL,CAAC;;EAED;EACA,MAAME,SAAS,GAAG,CAChB;IACEC,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,wBAAwB;IAC9BC,OAAO,EAAE,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU;EAC9C;EACA;EAAA,CACD;;EAED,oBACEZ,OAAA;IAAAa,QAAA,EACGJ,SAAS,CAACK,GAAG,CAAEC,QAAQ,iBACtBf,OAAA;MAAAa,QAAA,gBACEb,OAAA;QAAAa,QAAA,EAAIE,QAAQ,CAACJ;MAAI;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACrBJ,QAAQ,CAACH,OAAO,CAACE,GAAG,CAAC,CAACM,MAAM,EAAEC,KAAK,kBAClCrB,OAAA;QAAAa,QAAA,gBACEb,OAAA;UACEsB,IAAI,EAAC,OAAO;UACZC,IAAI,EAAG,YAAWR,QAAQ,CAACL,EAAG,EAAE;UAChCc,OAAO,EAAErB,eAAe,CAACY,QAAQ,CAACL,EAAE,CAAC,KAAKW,KAAM;UAChDI,QAAQ,EAAEA,CAAA,KAAMpB,kBAAkB,CAACU,QAAQ,CAACL,EAAE,EAAEW,KAAK;QAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxD,CAAC,EACDC,MAAM;MAAA,GAPGC,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQV,CACR,CAAC;IAAA,GAZMJ,QAAQ,CAACL,EAAE;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAahB,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACjB,EAAA,CAxCID,QAAQ;AAAAyB,EAAA,GAARzB,QAAQ;AA0Cd,eAAeA,QAAQ;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}