{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TF\\\\Desktop\\\\hubspotTest\\\\client\\\\src\\\\components\\\\Question.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ShowResult from \"./ShowResult\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Question() {\n  _s();\n  const [Qestion, setQuestion] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const [clickedOption, setClickedOption] = useState(0);\n  const [showResult, setShowResult] = useState(false);\n  const changeQuestion = () => {\n    updateScore();\n    if (currentQuestion < QuizData.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n      setClickedOption(0);\n    } else {\n      setShowResult(true);\n    }\n  };\n  const updateScore = () => {\n    if (clickedOption === QuizData[currentQuestion].answer) {\n      setScore(score + 1);\n    }\n  };\n  // const resetAll=()=>{\n  //     setShowResult(false);\n  //     setCurrentQuestion(0);\n  //     setClickedOption(0);\n  //     setScore(0);\n  // }\n\n  //get all question from database\n\n  const getQuestion = async () => {\n    try {\n      const {\n        data\n      } = await axios.get(\"http://localhost:5000/api/user/question/1\");\n      console.log(data);\n      if (data) {\n        setQuestion(data.questions);\n      }\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n  //lifecycle hooks\n  useEffect(() => {\n    getQuestion();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"heading-txt\",\n      children: \"Inboud Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: showResult ? /*#__PURE__*/_jsxDEV(ShowResult, {\n        score: score,\n        totalScore: QuizData.length,\n        tryAgain: resetAll\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"question-number\",\n            children: [currentQuestion + 1, \". \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"question-txt\",\n            children: QuizData[currentQuestion].question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option-container\",\n          children: QuizData[currentQuestion].options.map((option, i) => {\n            return /*#__PURE__*/_jsxDEV(\"button\", {\n              // className=\"option-btn\"\n              className: `option-btn ${clickedOption == i + 1 ? \"checked\" : null}`,\n              onClick: () => setClickedOption(i + 1),\n              children: option\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          value: \"Next\",\n          id: \"next-button\",\n          onClick: changeQuestion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(Question, \"UMBePZRxncC1pD8/L2ndx4gcoV8=\");\n_c = Question;\nexport default Question;\nvar _c;\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["React","useState","ShowResult","jsxDEV","_jsxDEV","Fragment","_Fragment","Question","_s","Qestion","setQuestion","currentQuestion","setCurrentQuestion","score","setScore","clickedOption","setClickedOption","showResult","setShowResult","changeQuestion","updateScore","QuizData","length","answer","getQuestion","data","axios","get","console","log","questions","error","message","useEffect","children","className","fileName","_jsxFileName","lineNumber","columnNumber","totalScore","tryAgain","resetAll","id","question","options","map","option","i","onClick","type","value","_c","$RefreshReg$"],"sources":["C:/Users/TF/Desktop/hubspotTest/client/src/components/Question.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport ShowResult from \"./ShowResult\";\r\nfunction Question() {\r\n  const [Qestion, setQuestion] = useState([]);\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [clickedOption, setClickedOption] = useState(0);\r\n  const [showResult, setShowResult] = useState(false);\r\n\r\n  const changeQuestion = () => {\r\n    updateScore();\r\n    if (currentQuestion < QuizData.length - 1) {\r\n      setCurrentQuestion(currentQuestion + 1);\r\n      setClickedOption(0);\r\n    } else {\r\n      setShowResult(true);\r\n    }\r\n  };\r\n  const updateScore = () => {\r\n    if (clickedOption === QuizData[currentQuestion].answer) {\r\n      setScore(score + 1);\r\n    }\r\n  };\r\n  // const resetAll=()=>{\r\n  //     setShowResult(false);\r\n  //     setCurrentQuestion(0);\r\n  //     setClickedOption(0);\r\n  //     setScore(0);\r\n  // }\r\n\r\n  //get all question from database\r\n\r\n  const getQuestion = async () => {\r\n    try {\r\n      const { data } = await axios.get(\r\n        \"http://localhost:5000/api/user/question/1\"\r\n      );\r\n      console.log(data);\r\n      if (data) {\r\n        setQuestion(data.questions);\r\n      }\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n  //lifecycle hooks\r\n  useEffect(() => {\r\n    getQuestion();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <p className=\"heading-txt\">Inboud Test</p>\r\n      <div className=\"container\">\r\n        {showResult ? (\r\n          <ShowResult\r\n            score={score}\r\n            totalScore={QuizData.length}\r\n            tryAgain={resetAll}\r\n          />\r\n        ) : (\r\n          <>\r\n            <div className=\"question\">\r\n              <span id=\"question-number\">{currentQuestion + 1}. </span>\r\n              <span id=\"question-txt\">\r\n                {QuizData[currentQuestion].question}\r\n              </span>\r\n            </div>\r\n            <div className=\"option-container\">\r\n              {QuizData[currentQuestion].options.map((option, i) => {\r\n                return (\r\n                  <button\r\n                    // className=\"option-btn\"\r\n                    className={`option-btn ${\r\n                      clickedOption == i + 1 ? \"checked\" : null\r\n                    }`}\r\n                    key={i}\r\n                    onClick={() => setClickedOption(i + 1)}\r\n                  >\r\n                    {option}\r\n                  </button>\r\n                );\r\n              })}\r\n            </div>\r\n            <input\r\n              type=\"button\"\r\n              value=\"Next\"\r\n              id=\"next-button\"\r\n              onClick={changeQuestion}\r\n            />\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Question;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}