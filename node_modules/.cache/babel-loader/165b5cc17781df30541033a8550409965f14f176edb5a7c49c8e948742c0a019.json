{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TF\\\\Desktop\\\\Inbount\\\\client\\\\src\\\\components\\\\Question.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport ReactWebcam from \"react-webcam\";\nimport axios from \"axios\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport { useAuth } from \"../context/auth\";\nimport { toast } from \"react-toastify\";\nimport Spinner from \"./Spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Question() {\n  _s();\n  const navigate = useNavigate();\n  const [Question, setQuestion] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [Timer, seTimer] = useState(\"\");\n  const [auth, setAuth] = useAuth();\n  const [Update, setUpdate] = useState([]);\n  const [selectedOptions, setSelectedOptions] = useState({});\n  const [category, setCategory] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const search = useLocation().search;\n  const exam_type = new URLSearchParams(search).get(\"exam-type\");\n  const makeUniqueCategory = arr => {\n    let set = new Set();\n    arr.forEach(item => {\n      // console.log(item.category);\n\n      set.add(item.category.replaceAll(\"_\", \" \"));\n    });\n    setCategory([...set]);\n  };\n  const handleOptionSelect = (questionId, optionId, e) => {\n    setSelectedOptions(prevSelected => ({\n      ...prevSelected,\n      [questionId]: optionId\n    }));\n    changeHandleer(e);\n  };\n  const calculateAnswer = () => {\n    const trackResults = Question[currentQuestion];\n    Update.forEach(item => {\n      if (item._id === trackResults._id) {\n        if (item.user_res === null) {\n          toast.error(\"Answer is required!\");\n        } else {\n          setCurrentQuestion(currentQuestion + 1);\n        }\n      }\n    });\n  };\n  function startTimer(duration) {\n    let timer = duration;\n    const interval = setInterval(function () {\n      const hours = Math.floor(timer / 3600);\n      const minutes = Math.floor(timer % 3600 / 60);\n      const seconds = timer % 60;\n      const formattedTime = (hours < 10 ? \"0\" : \"\") + hours + \":\" + (minutes < 10 ? \"0\" : \"\") + minutes + \":\" + (seconds < 10 ? \"0\" : \"\") + seconds;\n      seTimer(formattedTime);\n      if (--timer < 0) {\n        clearInterval(interval);\n        seTimer(\"00:00:00\");\n      }\n    }, 1000);\n  }\n  //get all question from database\n\n  //lifecycle hooks\n\n  const getQuestion = async () => {\n    try {\n      const {\n        data\n      } = await axios.post(\"http://localhost:4000/api/user/questions\", {\n        exam_name: exam_type\n      });\n      if (data) {\n        setQuestion(data.data);\n        makeUniqueCategory(data.data);\n        setIsLoading(false);\n        setUpdate(data.data);\n        console.log(data.data);\n        // document.documentElement.requestFullscreen();\n      }\n    } catch (error) {\n      toast.error(\"please contact us!\");\n      // localStorage.removeItem(\"auth\");\n      // window.location.href = \"https://www.inboundacademy.in/\";\n    }\n  };\n\n  function changeHandleer(e) {\n    const userAnswer = Number(e.target.value);\n    Update.forEach(item => {\n      if (item._id === Question[currentQuestion]._id) {\n        item.user_res = userAnswer;\n      }\n    });\n  }\n  // onsubmit\n  async function onSubmitHandler() {\n    try {\n      const {\n        data\n      } = await axios.post(\"https://assessment.inboundacademy.in/api/user/answer-response\", {\n        userId: auth.user._id,\n        userAnswer: Update\n      });\n      if (data) {\n        navigate(\"/result\");\n        // localStorage.clear();\n      }\n    } catch (error) {\n      toast.error(\"something went wrong\");\n    }\n  }\n  if (!isLoading) {\n    let hours = 1;\n    let now = new Date().getTime();\n    var setupTime = localStorage.getItem(\"setupTime\");\n    if (setupTime == null) {\n      localStorage.setItem(\"setupTime\", now);\n    } else {\n      if (now - setupTime > hours * 60 * 60 * 1000) {\n        onSubmitHandler();\n        localStorage.removeItem(\"setupTime\");\n      }\n    }\n  }\n  //function for disable copy command\n  const disableCopy = e => {\n    if (e.ctrlKey && e.key === \"c\") {\n      e.preventDefault();\n    }\n  };\n\n  //disable right click\n  const disableRightClick = e => {\n    e.preventDefault();\n  };\n  useEffect(() => {\n    getQuestion();\n    startTimer(3600);\n    // window.addEventListener(\"keydown\", disableCopy);\n    // window.addEventListener(\"contextmenu\", disableRightClick);\n    // return () => {\n    //   window.removeEventListener(\"keydown\", disableCopy);\n    // };\n  }, []);\n  return (\n    /*#__PURE__*/\n    // <>\n    //   {isLoading ? (\n    //     <Spinner />\n    //   ) : (\n    //     <div className=\"content_wraper\">\n    //       <div className=\"logo\">\n    //         <div className=\"container\">\n    //           <a target=\"_blank\" href=\"https://assessment.inboundacademy.in\">\n    //             <img src=\"images/inbound-academy-logo.webp\" alt=\"Logo\" />\n    //           </a>\n    //         </div>\n    //       </div>\n    //       <div className=\"body_content\">\n    //         <div className=\"container\">\n    //           <div className=\"exam_wrap\">\n    //             <div className=\"row\">\n    //               <div className=\"col-md-9\">\n    //                 <div className=\"exam_title\">\n    //                   <h1>Inbound Academy Assessement Test</h1>\n    //                 </div>\n    //                 {/* <div className=\"exam_cats\">\n    //            <span>{Question?.[currentQuestion]?.category}</span>\n    //          </div> */}\n    //                 <div className=\"exam_cats\">\n    //                   {category.map((item) => (\n    //                     <span\n    //                       className={\n    //                         (Question?.[currentQuestion]?.category).replaceAll(\n    //                           \"_\",\n    //                           \" \"\n    //                         ) == item\n    //                           ? \"active_cat\"\n    //                           : \"\"\n    //                       }\n    //                     >\n    //                       {item}\n    //                     </span>\n    //                   ))}\n    //                   {/* <span className=\"active_cat\">\n    //              {Question?.[currentQuestion]?.category}\n    //            </span>\n    //            <span>PHP</span>\n    //            <span>MYSQL</span> */}\n    //                 </div>\n    //                 <div className=\"exam_qustions\">\n    //                   <div className=\"qus_nums\">\n    //                     <span>{`${currentQuestion + 1} of ${\n    //                       Question.length\n    //                     }`}</span>\n    //                   </div>\n    //                   <div className=\"qus_ans\">\n    //                     <div className=\"qustion\">\n    //                       {Question?.[currentQuestion]?.question}\n    //                     </div>\n    //                     <div className=\"qustion_mcqs\">\n    //                       <ul type=\"A\">\n    //                         {Question?.[currentQuestion]?.options?.map(\n    //                           (option, index) => (\n    //                             <label key={index} className=\"ans-label\">\n    //                               <input\n    //                                 type=\"radio\"\n    //                                 name={`question-${Question?.[currentQuestion]?._id}`}\n    //                                 value={index + 1}\n    //                                 checked={\n    //                                   selectedOptions[\n    //                                     Question?.[currentQuestion]?._id\n    //                                   ] === index\n    //                                 }\n    //                                 onChange={(e) =>\n    //                                   handleOptionSelect(\n    //                                     Question?.[currentQuestion]?._id,\n    //                                     index,\n    //                                     e\n    //                                   )\n    //                                 }\n    //                               />\n    //                               <span></span>\n    //                               {option}\n    //                             </label>\n    //                           )\n    //                         )}\n    //                       </ul>\n    //                     </div>\n    //                   </div>\n    //                 </div>\n    //                 <div className=\"exam_qustions_btns text-right\">\n    //                   {currentQuestion >= 1 ? (\n    //                     <button\n    //                       onClick={() =>\n    //                         setCurrentQuestion(currentQuestion - 1)\n    //                       }\n    //                       className=\" btn\"\n    //                     >\n    //                       <i className=\"fa-solid fa-angles-left\"></i>&nbsp;Back\n    //                     </button>\n    //                   ) : (\n    //                     \"\"\n    //                   )}\n    //                   {currentQuestion + 1 === Question.length ? (\n    //                     <button\n    //                       className=\"btn\"\n    //                       type=\"submit\"\n    //                       onClick={() => onSubmitHandler()}\n    //                     >\n    //                       Submit Exam\n    //                     </button>\n    //                   ) : (\n    //                     <button\n    //                       onClick={() => calculateAnswer()}\n    //                       className=\"btn\"\n    //                     >\n    //                       Next&nbsp;<i className=\"fa-solid fa-angles-right\"></i>\n    //                     </button>\n    //                   )}\n    //                 </div>\n    //               </div>\n    //               <div className=\"col-md-3\">\n    //                 <div className=\"video_section\">\n    //                   <div className=\"video-inner\">\n    //                     <ReactWebcam width=\"100%\" />\n    //                     <div className=\"exam_time\">\n    //                       Time Remaining: &nbsp;<span>{Timer}</span>\n    //                       <strong>\n    //                         <span id=\"timer\"></span>\n    //                       </strong>\n    //                     </div>\n    //                   </div>\n    //                 </div>\n    //               </div>\n    //             </div>\n    //           </div>\n    //         </div>\n    //       </div>\n    //       <footer className=\"text-center\">\n    //         <div className=\"container\">\n    //           Copyright © 2023.{\" \"}\n    //           <a href=\"https://www.transfunnel.com/\" target=\"_blank\">\n    //             TransFunnel Consulting\n    //           </a>\n    //         </div>\n    //       </footer>\n    //     </div>\n    //   )}\n    // </>\n    _jsxDEV(\"h1\", {\n      children: \"wellcome\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(Question, \"WJg3JbqOG04VqHQ+DGjD058bOoo=\", false, function () {\n  return [useNavigate, useAuth, useLocation];\n});\n_c = Question;\nexport default Question;\nvar _c;\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["React","useEffect","useState","ReactWebcam","axios","Link","useLocation","useNavigate","useAuth","toast","Spinner","jsxDEV","_jsxDEV","Question","_s","navigate","setQuestion","currentQuestion","setCurrentQuestion","Timer","seTimer","auth","setAuth","Update","setUpdate","selectedOptions","setSelectedOptions","category","setCategory","isLoading","setIsLoading","search","exam_type","URLSearchParams","get","makeUniqueCategory","arr","set","Set","forEach","item","add","replaceAll","handleOptionSelect","questionId","optionId","e","prevSelected","changeHandleer","calculateAnswer","trackResults","_id","user_res","error","startTimer","duration","timer","interval","setInterval","hours","Math","floor","minutes","seconds","formattedTime","clearInterval","getQuestion","data","post","exam_name","console","log","userAnswer","Number","target","value","onSubmitHandler","userId","user","now","Date","getTime","setupTime","localStorage","getItem","setItem","removeItem","disableCopy","ctrlKey","key","preventDefault","disableRightClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/TF/Desktop/Inbount/client/src/components/Question.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport ReactWebcam from \"react-webcam\";\r\n\r\nimport axios from \"axios\";\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from \"../context/auth\";\r\nimport { toast } from \"react-toastify\";\r\nimport Spinner from \"./Spinner\";\r\n\r\nfunction Question() {\r\n  const navigate = useNavigate();\r\n  const [Question, setQuestion] = useState([]);\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [Timer, seTimer] = useState(\"\");\r\n  const [auth, setAuth] = useAuth();\r\n  const [Update, setUpdate] = useState([]);\r\n  const [selectedOptions, setSelectedOptions] = useState({});\r\n  const [category, setCategory] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const search = useLocation().search;\r\n  const exam_type = new URLSearchParams(search).get(\"exam-type\");\r\n  const makeUniqueCategory = (arr) => {\r\n    let set = new Set();\r\n    arr.forEach((item) => {\r\n      // console.log(item.category);\r\n\r\n      set.add(item.category.replaceAll(\"_\", \" \"));\r\n    });\r\n\r\n    setCategory([...set]);\r\n  };\r\n  const handleOptionSelect = (questionId, optionId, e) => {\r\n    setSelectedOptions((prevSelected) => ({\r\n      ...prevSelected,\r\n      [questionId]: optionId,\r\n    }));\r\n    changeHandleer(e);\r\n  };\r\n\r\n  const calculateAnswer = () => {\r\n    const trackResults = Question[currentQuestion];\r\n    Update.forEach((item) => {\r\n      if (item._id === trackResults._id) {\r\n        if (item.user_res === null) {\r\n          toast.error(\"Answer is required!\");\r\n        } else {\r\n          setCurrentQuestion(currentQuestion + 1);\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  function startTimer(duration) {\r\n    let timer = duration;\r\n\r\n    const interval = setInterval(function () {\r\n      const hours = Math.floor(timer / 3600);\r\n      const minutes = Math.floor((timer % 3600) / 60);\r\n      const seconds = timer % 60;\r\n\r\n      const formattedTime =\r\n        (hours < 10 ? \"0\" : \"\") +\r\n        hours +\r\n        \":\" +\r\n        (minutes < 10 ? \"0\" : \"\") +\r\n        minutes +\r\n        \":\" +\r\n        (seconds < 10 ? \"0\" : \"\") +\r\n        seconds;\r\n\r\n      seTimer(formattedTime);\r\n\r\n      if (--timer < 0) {\r\n        clearInterval(interval);\r\n        seTimer(\"00:00:00\");\r\n      }\r\n    }, 1000);\r\n  }\r\n  //get all question from database\r\n\r\n  //lifecycle hooks\r\n\r\n  const getQuestion = async () => {\r\n    try {\r\n      const { data } = await axios.post(\r\n        \"http://localhost:4000/api/user/questions\",\r\n        {\r\n          exam_name: exam_type,\r\n        }\r\n      );\r\n\r\n      if (data) {\r\n        setQuestion(data.data);\r\n        makeUniqueCategory(data.data);\r\n        setIsLoading(false);\r\n        setUpdate(data.data);\r\n        console.log(data.data);\r\n        // document.documentElement.requestFullscreen();\r\n      }\r\n    } catch (error) {\r\n      toast.error(\"please contact us!\");\r\n      // localStorage.removeItem(\"auth\");\r\n      // window.location.href = \"https://www.inboundacademy.in/\";\r\n    }\r\n  };\r\n\r\n  function changeHandleer(e) {\r\n    const userAnswer = Number(e.target.value);\r\n    Update.forEach((item) => {\r\n      if (item._id === Question[currentQuestion]._id) {\r\n        item.user_res = userAnswer;\r\n      }\r\n    });\r\n  }\r\n  // onsubmit\r\n  async function onSubmitHandler() {\r\n    try {\r\n      const { data } = await axios.post(\r\n        \"https://assessment.inboundacademy.in/api/user/answer-response\",\r\n        {\r\n          userId: auth.user._id,\r\n          userAnswer: Update,\r\n        }\r\n      );\r\n\r\n      if (data) {\r\n        navigate(\"/result\");\r\n        // localStorage.clear();\r\n      }\r\n    } catch (error) {\r\n      toast.error(\"something went wrong\");\r\n    }\r\n  }\r\n  if (!isLoading) {\r\n    let hours = 1;\r\n\r\n    let now = new Date().getTime();\r\n    var setupTime = localStorage.getItem(\"setupTime\");\r\n    if (setupTime == null) {\r\n      localStorage.setItem(\"setupTime\", now);\r\n    } else {\r\n      if (now - setupTime > hours * 60 * 60 * 1000) {\r\n        onSubmitHandler();\r\n        localStorage.removeItem(\"setupTime\");\r\n      }\r\n    }\r\n  }\r\n  //function for disable copy command\r\n  const disableCopy = (e) => {\r\n    if (e.ctrlKey && e.key === \"c\") {\r\n      e.preventDefault();\r\n    }\r\n  };\r\n\r\n  //disable right click\r\n  const disableRightClick = (e) => {\r\n    e.preventDefault();\r\n  };\r\n  useEffect(() => {\r\n    getQuestion();\r\n    startTimer(3600);\r\n    // window.addEventListener(\"keydown\", disableCopy);\r\n    // window.addEventListener(\"contextmenu\", disableRightClick);\r\n    // return () => {\r\n    //   window.removeEventListener(\"keydown\", disableCopy);\r\n    // };\r\n  }, []);\r\n  return (\r\n    // <>\r\n    //   {isLoading ? (\r\n    //     <Spinner />\r\n    //   ) : (\r\n    //     <div className=\"content_wraper\">\r\n    //       <div className=\"logo\">\r\n    //         <div className=\"container\">\r\n    //           <a target=\"_blank\" href=\"https://assessment.inboundacademy.in\">\r\n    //             <img src=\"images/inbound-academy-logo.webp\" alt=\"Logo\" />\r\n    //           </a>\r\n    //         </div>\r\n    //       </div>\r\n\r\n    //       <div className=\"body_content\">\r\n    //         <div className=\"container\">\r\n    //           <div className=\"exam_wrap\">\r\n    //             <div className=\"row\">\r\n    //               <div className=\"col-md-9\">\r\n    //                 <div className=\"exam_title\">\r\n    //                   <h1>Inbound Academy Assessement Test</h1>\r\n    //                 </div>\r\n    //                 {/* <div className=\"exam_cats\">\r\n    //            <span>{Question?.[currentQuestion]?.category}</span>\r\n    //          </div> */}\r\n    //                 <div className=\"exam_cats\">\r\n    //                   {category.map((item) => (\r\n    //                     <span\r\n    //                       className={\r\n    //                         (Question?.[currentQuestion]?.category).replaceAll(\r\n    //                           \"_\",\r\n    //                           \" \"\r\n    //                         ) == item\r\n    //                           ? \"active_cat\"\r\n    //                           : \"\"\r\n    //                       }\r\n    //                     >\r\n    //                       {item}\r\n    //                     </span>\r\n    //                   ))}\r\n    //                   {/* <span className=\"active_cat\">\r\n\r\n    //              {Question?.[currentQuestion]?.category}\r\n    //            </span>\r\n    //            <span>PHP</span>\r\n    //            <span>MYSQL</span> */}\r\n    //                 </div>\r\n    //                 <div className=\"exam_qustions\">\r\n    //                   <div className=\"qus_nums\">\r\n    //                     <span>{`${currentQuestion + 1} of ${\r\n    //                       Question.length\r\n    //                     }`}</span>\r\n    //                   </div>\r\n    //                   <div className=\"qus_ans\">\r\n    //                     <div className=\"qustion\">\r\n    //                       {Question?.[currentQuestion]?.question}\r\n    //                     </div>\r\n    //                     <div className=\"qustion_mcqs\">\r\n    //                       <ul type=\"A\">\r\n    //                         {Question?.[currentQuestion]?.options?.map(\r\n    //                           (option, index) => (\r\n    //                             <label key={index} className=\"ans-label\">\r\n    //                               <input\r\n    //                                 type=\"radio\"\r\n    //                                 name={`question-${Question?.[currentQuestion]?._id}`}\r\n    //                                 value={index + 1}\r\n    //                                 checked={\r\n    //                                   selectedOptions[\r\n    //                                     Question?.[currentQuestion]?._id\r\n    //                                   ] === index\r\n    //                                 }\r\n    //                                 onChange={(e) =>\r\n    //                                   handleOptionSelect(\r\n    //                                     Question?.[currentQuestion]?._id,\r\n    //                                     index,\r\n    //                                     e\r\n    //                                   )\r\n    //                                 }\r\n    //                               />\r\n    //                               <span></span>\r\n    //                               {option}\r\n    //                             </label>\r\n    //                           )\r\n    //                         )}\r\n    //                       </ul>\r\n    //                     </div>\r\n    //                   </div>\r\n    //                 </div>\r\n    //                 <div className=\"exam_qustions_btns text-right\">\r\n    //                   {currentQuestion >= 1 ? (\r\n    //                     <button\r\n    //                       onClick={() =>\r\n    //                         setCurrentQuestion(currentQuestion - 1)\r\n    //                       }\r\n    //                       className=\" btn\"\r\n    //                     >\r\n    //                       <i className=\"fa-solid fa-angles-left\"></i>&nbsp;Back\r\n    //                     </button>\r\n    //                   ) : (\r\n    //                     \"\"\r\n    //                   )}\r\n\r\n    //                   {currentQuestion + 1 === Question.length ? (\r\n    //                     <button\r\n    //                       className=\"btn\"\r\n    //                       type=\"submit\"\r\n    //                       onClick={() => onSubmitHandler()}\r\n    //                     >\r\n    //                       Submit Exam\r\n    //                     </button>\r\n    //                   ) : (\r\n    //                     <button\r\n    //                       onClick={() => calculateAnswer()}\r\n    //                       className=\"btn\"\r\n    //                     >\r\n    //                       Next&nbsp;<i className=\"fa-solid fa-angles-right\"></i>\r\n    //                     </button>\r\n    //                   )}\r\n    //                 </div>\r\n    //               </div>\r\n    //               <div className=\"col-md-3\">\r\n    //                 <div className=\"video_section\">\r\n    //                   <div className=\"video-inner\">\r\n    //                     <ReactWebcam width=\"100%\" />\r\n    //                     <div className=\"exam_time\">\r\n    //                       Time Remaining: &nbsp;<span>{Timer}</span>\r\n    //                       <strong>\r\n    //                         <span id=\"timer\"></span>\r\n    //                       </strong>\r\n    //                     </div>\r\n    //                   </div>\r\n    //                 </div>\r\n    //               </div>\r\n    //             </div>\r\n    //           </div>\r\n    //         </div>\r\n    //       </div>\r\n    //       <footer className=\"text-center\">\r\n    //         <div className=\"container\">\r\n    //           Copyright © 2023.{\" \"}\r\n    //           <a href=\"https://www.transfunnel.com/\" target=\"_blank\">\r\n    //             TransFunnel Consulting\r\n    //           </a>\r\n    //         </div>\r\n    //       </footer>\r\n    //     </div>\r\n    //   )}\r\n    // </>\r\n    <h1>wellcome</h1>\r\n  );\r\n}\r\n\r\nexport default Question;\r\n"],"mappings":"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B,SAAS,EAAE;IACd,IAAI8B,KAAK,GAAG,CAAC;IAEb,IAAIoB,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;IAC9B,IAAIC,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IACjD,IAAIF,SAAS,IAAI,IAAI,EAAE;MACrBC,YAAY,CAACE,OAAO,CAAC,WAAW,EAAEN,GAAG,CAAC;IACxC,CAAC,MAAM;MACL,IAAIA,GAAG,GAAGG,SAAS,GAAGvB,KAAK,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,EAAE;QAC5CiB,eAAe,CAAC,CAAC;QACjBO,YAAY,CAACG,UAAU,CAAC,WAAW,CAAC;MACtC;IACF;EACF;EACA;EACA,MAAMC,WAAW,GAAIzC,CAAC,IAAK;IACzB,IAAIA,CAAC,CAAC0C,OAAO,IAAI1C,CAAC,CAAC2C,GAAG,KAAK,GAAG,EAAE;MAC9B3C,CAAC,CAAC4C,cAAc,CAAC,CAAC;IACpB;EACF,CAAC;;EAED;EACA,MAAMC,iBAAiB,GAAI7C,CAAC,IAAK;IAC/BA,CAAC,CAAC4C,cAAc,CAAC,CAAC;EACpB,CAAC;EACDzF,SAAS,CAAC,MAAM;IACdiE,WAAW,CAAC,CAAC;IACbZ,UAAU,CAAC,IAAI,CAAC;IAChB;IACA;IACA;IACA;IACA;EACF,CAAC,EAAE,EAAE,CAAC;EACN;IAAA;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA1C,OAAA;MAAAgF,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;AAErB;AAAClF,EAAA,CApTQD,QAAQ;EAAA,QACEN,WAAW,EAIJC,OAAO,EAKhBF,WAAW;AAAA;AAAA2F,EAAA,GAVnBpF,QAAQ;AAsTjB,eAAeA,QAAQ;AAAC,IAAAoF,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}