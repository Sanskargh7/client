{"ast":null,"code":"import React,{useEffect}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";var Spinner=function Spinner(){var setLocalStorageWithTimestamp=function setLocalStorageWithTimestamp(){var currentTime=new Date().getTime();localStorage.setItem(\"myData\",JSON.stringify({value:\"yourValue\",timestamp:currentTime}));};var checkAndRemoveLocalStorage=function checkAndRemoveLocalStorage(){var storedData=localStorage.getItem(\"myData\");if(storedData){var _JSON$parse=JSON.parse(storedData),value=_JSON$parse.value,timestamp=_JSON$parse.timestamp;var currentTime=new Date().getTime();var oneHourInMilliseconds=60*1000;if(currentTime-timestamp>=oneHourInMilliseconds){// One hour has passed, remove the item from localStorage\nconsole.log(\"wellcome to localstorage\");localStorage.removeItem(\"myData\");}}};useEffect(function(){setLocalStorageWithTimestamp();// Check and remove localStorage every minute (you can adjust the interval)\nvar interval=setInterval(function(){checkAndRemoveLocalStorage();},60000);// Check every minute\n// Cleanup the interval when the component unmounts\nreturn function(){return clearInterval(interval);};},[]);return/*#__PURE__*/_jsx(\"div\",{className:\"spinner_outer\",children:/*#__PURE__*/_jsx(\"div\",{className:\"spinner-border text-warning \",role:\"status\",children:/*#__PURE__*/_jsx(\"span\",{className:\"visually-hidden\",children:\"Loading...\"})})});};export default Spinner;","map":{"version":3,"names":["React","useEffect","jsx","_jsx","Spinner","setLocalStorageWithTimestamp","currentTime","Date","getTime","localStorage","setItem","JSON","stringify","value","timestamp","checkAndRemoveLocalStorage","storedData","getItem","_JSON$parse","parse","oneHourInMilliseconds","console","log","removeItem","interval","setInterval","clearInterval","className","children","role"],"sources":["C:/Users/TF/Desktop/Inbount/client/src/components/Spinner.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\n\r\nconst Spinner = () => {\r\n  const setLocalStorageWithTimestamp = () => {\r\n    const currentTime = new Date().getTime();\r\n    localStorage.setItem(\r\n      \"myData\",\r\n      JSON.stringify({ value: \"yourValue\", timestamp: currentTime })\r\n    );\r\n  };\r\n  const checkAndRemoveLocalStorage = () => {\r\n    const storedData = localStorage.getItem(\"myData\");\r\n    if (storedData) {\r\n      const { value, timestamp } = JSON.parse(storedData);\r\n      const currentTime = new Date().getTime();\r\n      const oneHourInMilliseconds = 60 * 1000;\r\n\r\n      if (currentTime - timestamp >= oneHourInMilliseconds) {\r\n        // One hour has passed, remove the item from localStorage\r\n        console.log(\"wellcome to localstorage\");\r\n        localStorage.removeItem(\"myData\");\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    setLocalStorageWithTimestamp();\r\n\r\n    // Check and remove localStorage every minute (you can adjust the interval)\r\n    const interval = setInterval(() => {\r\n      checkAndRemoveLocalStorage();\r\n    }, 60000); // Check every minute\r\n\r\n    // Cleanup the interval when the component unmounts\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n  return (\r\n    <div className=\"spinner_outer\">\r\n      <div className=\"spinner-border text-warning \" role=\"status\">\r\n        <span className=\"visually-hidden\">Loading...</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEzC,GAAM,CAAAC,OAAO,CAAG,QAAV,CAAAA,OAAOA,CAAA,CAAS,CACpB,GAAM,CAAAC,4BAA4B,CAAG,QAA/B,CAAAA,4BAA4BA,CAAA,CAAS,CACzC,GAAM,CAAAC,WAAW,CAAG,GAAI,CAAAC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,CACxCC,YAAY,CAACC,OAAO,CAClB,QAAQ,CACRC,IAAI,CAACC,SAAS,CAAC,CAAEC,KAAK,CAAE,WAAW,CAAEC,SAAS,CAAER,WAAY,CAAC,CAC/D,CAAC,CACH,CAAC,CACD,GAAM,CAAAS,0BAA0B,CAAG,QAA7B,CAAAA,0BAA0BA,CAAA,CAAS,CACvC,GAAM,CAAAC,UAAU,CAAGP,YAAY,CAACQ,OAAO,CAAC,QAAQ,CAAC,CACjD,GAAID,UAAU,CAAE,CACd,IAAAE,WAAA,CAA6BP,IAAI,CAACQ,KAAK,CAACH,UAAU,CAAC,CAA3CH,KAAK,CAAAK,WAAA,CAALL,KAAK,CAAEC,SAAS,CAAAI,WAAA,CAATJ,SAAS,CACxB,GAAM,CAAAR,WAAW,CAAG,GAAI,CAAAC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,CACxC,GAAM,CAAAY,qBAAqB,CAAG,EAAE,CAAG,IAAI,CAEvC,GAAId,WAAW,CAAGQ,SAAS,EAAIM,qBAAqB,CAAE,CACpD;AACAC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC,CACvCb,YAAY,CAACc,UAAU,CAAC,QAAQ,CAAC,CACnC,CACF,CACF,CAAC,CACDtB,SAAS,CAAC,UAAM,CACdI,4BAA4B,CAAC,CAAC,CAE9B;AACA,GAAM,CAAAmB,QAAQ,CAAGC,WAAW,CAAC,UAAM,CACjCV,0BAA0B,CAAC,CAAC,CAC9B,CAAC,CAAE,KAAK,CAAC,CAAE;AAEX;AACA,MAAO,kBAAM,CAAAW,aAAa,CAACF,QAAQ,CAAC,GACtC,CAAC,CAAE,EAAE,CAAC,CACN,mBACErB,IAAA,QAAKwB,SAAS,CAAC,eAAe,CAAAC,QAAA,cAC5BzB,IAAA,QAAKwB,SAAS,CAAC,8BAA8B,CAACE,IAAI,CAAC,QAAQ,CAAAD,QAAA,cACzDzB,IAAA,SAAMwB,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAAC,YAAU,CAAM,CAAC,CAChD,CAAC,CACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAxB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}