{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TF\\\\Desktop\\\\hubspotTest\\\\client\\\\src\\\\components\\\\Question.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import ReactWebcam from \"react-webcam\";\n// import ShowResult from \"./ShowResult\";\n// import axios from \"axios\";\n// import { Link, useNavigate } from \"react-router-dom\";\nimport { useAuth } from \"../context/auth\";\nimport { QuizData } from \"../quizData\";\n\n// function Question() {\n//   const navigate = useNavigate();\n//   const [Question, setQuestion] = useState(QuizData);\n//   const [currentQuestion, setCurrentQuestion] = useState(0);\n\n//   const [Timer, seTimer] = useState(\"\");\n//   const [auth, setAuth] = useAuth();\n//   const [Update, setUpdate] = useState(QuizData);\n//   const [Clicked, setClicked] = useState(false);\n//   let flag = false;\n//   const calculateAnswer = () => {\n//     // if (!Clicked) {\n//     //   window.alert(\"answer is required\");\n//     // } else {\n//     setCurrentQuestion(currentQuestion + 1);\n//     setClicked(false);\n//     // }\n//   };\n\n//   function startTimer(duration) {\n//     let timer = duration;\n\n//     const interval = setInterval(function () {\n//       const hours = Math.floor(timer / 3600);\n//       const minutes = Math.floor((timer % 3600) / 60);\n//       const seconds = timer % 60;\n\n//       const formattedTime =\n//         (hours < 10 ? \"0\" : \"\") +\n//         hours +\n//         \":\" +\n//         (minutes < 10 ? \"0\" : \"\") +\n//         minutes +\n//         \":\" +\n//         (seconds < 10 ? \"0\" : \"\") +\n//         seconds;\n\n//       seTimer(formattedTime);\n\n//       if (--timer < 0) {\n//         clearInterval(interval);\n//         seTimer(\"00:00:00\");\n//       }\n//     }, 1000);\n//   }\n//   //get all question from database\n\n//   //lifecycle hooks\n//   // useEffect(() => {\n//   //   const getQuestion = async () => {\n//   //     try {\n//   //       const { data } = await axios.post(\n//   //         \"https://assessment.inboundacademy.in/api/user/questions\",\n//   //         {\n//   //           hindi: \"3\",\n\n//   //           english: \"3\",\n\n//   //           math: \"3\",\n//   //         }\n//   //       );\n\n//   //       if (data) {\n//   //         console.log(data);\n//   //         setQuestion(data.data);\n\n//   //         setUpdate(data.data);\n//   //       }\n//   //     } catch (error) {\n//   //       console.log(error.message);\n//   //     }\n//   //   };\n//   //   getQuestion();\n//   //   {\n//   //   }\n//   // }, []);\n\n//   // useEffect(() => {\n//   //   startTimer(3600);\n//   // }, []);\n//   function changeHandleer(e) {\n//     setClicked(true);\n//     console.log(e.target.value);\n//     const userAnswer = Number(e.target.value);\n//     Update.forEach((item) => {\n//       if (item._id === Question[currentQuestion]._id) {\n//         item.answer = userAnswer;\n//       }\n//     });\n//   }\n\n//   // onsubmit\n//   const onSubmitHandler = () => {\n//     let userAnswer = 0;\n//     Question.forEach((item) => {\n//       console.log(item._id);\n//       Update.forEach((userItem) => {\n//         console.log(userItem._id);\n//         if (userItem._id === item._id && userItem.answer === item.answer) {\n//           userAnswer = +1;\n//         }\n//       });\n//     });\n//     console.log(userAnswer);\n//     setAuth({ ...auth, score: userAnswer, length: Question.length });\n//     navigate(\"/result\");\n//   };\n//   return (\n//     <div className=\"content_wraper\">\n//       <div className=\"logo\">\n//         <div className=\"container\">\n//           <a target=\"_blank\" href=\"https://www.inboundacademy.in/\">\n//             <img src=\"images/inbound-academy-logo.webp\" alt=\"Logo\" />\n//           </a>\n//         </div>\n//       </div>\n//       <div className=\"body_content\">\n//         <div className=\"container\">\n//           <div className=\"exam_wrap\">\n//             <div className=\"exam_title\">\n//               <h1>Salesforce Administrator Certification Practice Test</h1>\n//             </div>\n//             {/* <ReactWebcam height={200} width={200} /> */}\n\n//             <div className=\"exam_time\">\n//               Time Remaining: &nbsp;{Timer}\n//               <strong>\n//                 <span id=\"timer\"></span>\n//               </strong>\n//             </div>\n//             <div className=\"exam_qustions\">\n//               <div className=\"qus_nums\">{`${currentQuestion + 1} of ${\n//                 Question.length\n//               }`}</div>\n//               <div className=\"qus_ans\">\n//                 <div className=\"qustion\">\n//                   {Question?.[currentQuestion]?.question}\n//                 </div>\n\n//                 <div className=\"qustion_mcqs\">\n//                   <ul type=\"A\">\n//                     {Question?.[currentQuestion]?.options?.map(\n//                       (option, index) => (\n//                         <li key={index}>\n//                           <span>\n//                             <input\n//                               type=\"radio\"\n//                               name={`ques_${currentQuestion}`}\n//                               value={index + 1}\n//                               id=\"1\"\n//                               onChange={changeHandleer}\n//                             />\n//                             <label htmlFor={`1`}>{option}</label>\n//                           </span>\n//                         </li>\n//                       )\n//                     )}\n//                   </ul>\n//                 </div>\n//               </div>\n//             </div>\n//             <div className=\"exam_qustions_btns text-right\">\n//               {currentQuestion >= 1 ? (\n//                 <button\n//                   onClick={() => setCurrentQuestion(currentQuestion - 1)}\n//                   className=\" btn\"\n//                 >\n//                   <i className=\"fa-solid fa-angles-left\"></i>&nbsp;Back\n//                 </button>\n//               ) : (\n//                 \"\"\n//               )}\n\n//               {currentQuestion + 1 === Question.length ? (\n//                 // <Link className=\"btn\" to={\"/result\"}>\n//                 //   Submit Exam\n//                 // </Link>\n//                 <button className=\"btn\" onClick={onSubmitHandler}>\n//                   Submit Exam\n//                 </button>\n//               ) : (\n//                 <button onClick={() => calculateAnswer()} className=\"btn\">\n//                   Next&nbsp;<i className=\"fa-solid fa-angles-right\"></i>\n//                 </button>\n//               )}\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//       <footer className=\"text-center\">\n//         <div className=\"container\">\n//           Copyright Â© 2023.{\" \"}\n//           <a href=\"https://www.transfunnel.com/\" target=\"_blank\">\n//             TransFunnel Consulting\n//           </a>\n//         </div>\n//       </footer>\n//     </div>\n//   );\n// }\n\n// export default Question;\nimport React, { useState } from \"react\";\n// import { QuizData } from '../Data/QuizData'\n// import QuizResult from './QuizResult';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Quiz() {\n  _s();\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const [clickedOption, setClickedOption] = useState(0);\n  const [showResult, setShowResult] = useState(false);\n  const changeQuestion = () => {\n    updateScore();\n    if (currentQuestion < QuizData.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n      setClickedOption(0);\n    } else {\n      setShowResult(true);\n    }\n  };\n  const updateScore = () => {\n    if (clickedOption === QuizData[currentQuestion].answer) {\n      setScore(score + 1);\n    }\n  };\n  const resetAll = () => {\n    setShowResult(false);\n    setCurrentQuestion(0);\n    setClickedOption(0);\n    setScore(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"heading-txt\",\n      children: \"Quiz APP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: showResult ? /*#__PURE__*/_jsxDEV(QuizResult, {\n        score: score,\n        totalScore: QuizData.length,\n        tryAgain: resetAll\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"question-number\",\n            children: [currentQuestion + 1, \". \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"question-txt\",\n            children: QuizData[currentQuestion].question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option-container\",\n          children: QuizData[currentQuestion].options.map((option, i) => {\n            return /*#__PURE__*/_jsxDEV(\"button\", {\n              // className=\"option-btn\"\n              className: `option-btn ${clickedOption == i + 1 ? \"checked\" : null}`,\n              onClick: () => setClickedOption(i + 1),\n              children: option\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          value: \"Next\",\n          id: \"next-button\",\n          onClick: changeQuestion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 241,\n    columnNumber: 5\n  }, this);\n}\n_s(Quiz, \"BAE8uDJWABXdhyGueM7c0xd6aC0=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["useAuth","QuizData","React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Quiz","_s","currentQuestion","setCurrentQuestion","score","setScore","clickedOption","setClickedOption","showResult","setShowResult","changeQuestion","updateScore","length","answer","resetAll","children","className","fileName","_jsxFileName","lineNumber","columnNumber","QuizResult","totalScore","tryAgain","id","question","options","map","option","i","onClick","type","value","_c","$RefreshReg$"],"sources":["C:/Users/TF/Desktop/hubspotTest/client/src/components/Question.jsx"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import ReactWebcam from \"react-webcam\";\r\n// import ShowResult from \"./ShowResult\";\r\n// import axios from \"axios\";\r\n// import { Link, useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from \"../context/auth\";\r\nimport { QuizData } from \"../quizData\";\r\n\r\n// function Question() {\r\n//   const navigate = useNavigate();\r\n//   const [Question, setQuestion] = useState(QuizData);\r\n//   const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\r\n//   const [Timer, seTimer] = useState(\"\");\r\n//   const [auth, setAuth] = useAuth();\r\n//   const [Update, setUpdate] = useState(QuizData);\r\n//   const [Clicked, setClicked] = useState(false);\r\n//   let flag = false;\r\n//   const calculateAnswer = () => {\r\n//     // if (!Clicked) {\r\n//     //   window.alert(\"answer is required\");\r\n//     // } else {\r\n//     setCurrentQuestion(currentQuestion + 1);\r\n//     setClicked(false);\r\n//     // }\r\n//   };\r\n\r\n//   function startTimer(duration) {\r\n//     let timer = duration;\r\n\r\n//     const interval = setInterval(function () {\r\n//       const hours = Math.floor(timer / 3600);\r\n//       const minutes = Math.floor((timer % 3600) / 60);\r\n//       const seconds = timer % 60;\r\n\r\n//       const formattedTime =\r\n//         (hours < 10 ? \"0\" : \"\") +\r\n//         hours +\r\n//         \":\" +\r\n//         (minutes < 10 ? \"0\" : \"\") +\r\n//         minutes +\r\n//         \":\" +\r\n//         (seconds < 10 ? \"0\" : \"\") +\r\n//         seconds;\r\n\r\n//       seTimer(formattedTime);\r\n\r\n//       if (--timer < 0) {\r\n//         clearInterval(interval);\r\n//         seTimer(\"00:00:00\");\r\n//       }\r\n//     }, 1000);\r\n//   }\r\n//   //get all question from database\r\n\r\n//   //lifecycle hooks\r\n//   // useEffect(() => {\r\n//   //   const getQuestion = async () => {\r\n//   //     try {\r\n//   //       const { data } = await axios.post(\r\n//   //         \"https://assessment.inboundacademy.in/api/user/questions\",\r\n//   //         {\r\n//   //           hindi: \"3\",\r\n\r\n//   //           english: \"3\",\r\n\r\n//   //           math: \"3\",\r\n//   //         }\r\n//   //       );\r\n\r\n//   //       if (data) {\r\n//   //         console.log(data);\r\n//   //         setQuestion(data.data);\r\n\r\n//   //         setUpdate(data.data);\r\n//   //       }\r\n//   //     } catch (error) {\r\n//   //       console.log(error.message);\r\n//   //     }\r\n//   //   };\r\n//   //   getQuestion();\r\n//   //   {\r\n//   //   }\r\n//   // }, []);\r\n\r\n//   // useEffect(() => {\r\n//   //   startTimer(3600);\r\n//   // }, []);\r\n//   function changeHandleer(e) {\r\n//     setClicked(true);\r\n//     console.log(e.target.value);\r\n//     const userAnswer = Number(e.target.value);\r\n//     Update.forEach((item) => {\r\n//       if (item._id === Question[currentQuestion]._id) {\r\n//         item.answer = userAnswer;\r\n//       }\r\n//     });\r\n//   }\r\n\r\n//   // onsubmit\r\n//   const onSubmitHandler = () => {\r\n//     let userAnswer = 0;\r\n//     Question.forEach((item) => {\r\n//       console.log(item._id);\r\n//       Update.forEach((userItem) => {\r\n//         console.log(userItem._id);\r\n//         if (userItem._id === item._id && userItem.answer === item.answer) {\r\n//           userAnswer = +1;\r\n//         }\r\n//       });\r\n//     });\r\n//     console.log(userAnswer);\r\n//     setAuth({ ...auth, score: userAnswer, length: Question.length });\r\n//     navigate(\"/result\");\r\n//   };\r\n//   return (\r\n//     <div className=\"content_wraper\">\r\n//       <div className=\"logo\">\r\n//         <div className=\"container\">\r\n//           <a target=\"_blank\" href=\"https://www.inboundacademy.in/\">\r\n//             <img src=\"images/inbound-academy-logo.webp\" alt=\"Logo\" />\r\n//           </a>\r\n//         </div>\r\n//       </div>\r\n//       <div className=\"body_content\">\r\n//         <div className=\"container\">\r\n//           <div className=\"exam_wrap\">\r\n//             <div className=\"exam_title\">\r\n//               <h1>Salesforce Administrator Certification Practice Test</h1>\r\n//             </div>\r\n//             {/* <ReactWebcam height={200} width={200} /> */}\r\n\r\n//             <div className=\"exam_time\">\r\n//               Time Remaining: &nbsp;{Timer}\r\n//               <strong>\r\n//                 <span id=\"timer\"></span>\r\n//               </strong>\r\n//             </div>\r\n//             <div className=\"exam_qustions\">\r\n//               <div className=\"qus_nums\">{`${currentQuestion + 1} of ${\r\n//                 Question.length\r\n//               }`}</div>\r\n//               <div className=\"qus_ans\">\r\n//                 <div className=\"qustion\">\r\n//                   {Question?.[currentQuestion]?.question}\r\n//                 </div>\r\n\r\n//                 <div className=\"qustion_mcqs\">\r\n//                   <ul type=\"A\">\r\n//                     {Question?.[currentQuestion]?.options?.map(\r\n//                       (option, index) => (\r\n//                         <li key={index}>\r\n//                           <span>\r\n//                             <input\r\n//                               type=\"radio\"\r\n//                               name={`ques_${currentQuestion}`}\r\n//                               value={index + 1}\r\n//                               id=\"1\"\r\n//                               onChange={changeHandleer}\r\n//                             />\r\n//                             <label htmlFor={`1`}>{option}</label>\r\n//                           </span>\r\n//                         </li>\r\n//                       )\r\n//                     )}\r\n//                   </ul>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//             <div className=\"exam_qustions_btns text-right\">\r\n//               {currentQuestion >= 1 ? (\r\n//                 <button\r\n//                   onClick={() => setCurrentQuestion(currentQuestion - 1)}\r\n//                   className=\" btn\"\r\n//                 >\r\n//                   <i className=\"fa-solid fa-angles-left\"></i>&nbsp;Back\r\n//                 </button>\r\n//               ) : (\r\n//                 \"\"\r\n//               )}\r\n\r\n//               {currentQuestion + 1 === Question.length ? (\r\n//                 // <Link className=\"btn\" to={\"/result\"}>\r\n//                 //   Submit Exam\r\n//                 // </Link>\r\n//                 <button className=\"btn\" onClick={onSubmitHandler}>\r\n//                   Submit Exam\r\n//                 </button>\r\n//               ) : (\r\n//                 <button onClick={() => calculateAnswer()} className=\"btn\">\r\n//                   Next&nbsp;<i className=\"fa-solid fa-angles-right\"></i>\r\n//                 </button>\r\n//               )}\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//       <footer className=\"text-center\">\r\n//         <div className=\"container\">\r\n//           Copyright Â© 2023.{\" \"}\r\n//           <a href=\"https://www.transfunnel.com/\" target=\"_blank\">\r\n//             TransFunnel Consulting\r\n//           </a>\r\n//         </div>\r\n//       </footer>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Question;\r\nimport React, { useState } from \"react\";\r\n// import { QuizData } from '../Data/QuizData'\r\n// import QuizResult from './QuizResult';\r\nfunction Quiz() {\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [clickedOption, setClickedOption] = useState(0);\r\n  const [showResult, setShowResult] = useState(false);\r\n\r\n  const changeQuestion = () => {\r\n    updateScore();\r\n    if (currentQuestion < QuizData.length - 1) {\r\n      setCurrentQuestion(currentQuestion + 1);\r\n      setClickedOption(0);\r\n    } else {\r\n      setShowResult(true);\r\n    }\r\n  };\r\n  const updateScore = () => {\r\n    if (clickedOption === QuizData[currentQuestion].answer) {\r\n      setScore(score + 1);\r\n    }\r\n  };\r\n  const resetAll = () => {\r\n    setShowResult(false);\r\n    setCurrentQuestion(0);\r\n    setClickedOption(0);\r\n    setScore(0);\r\n  };\r\n  return (\r\n    <div>\r\n      <p className=\"heading-txt\">Quiz APP</p>\r\n      <div className=\"container\">\r\n        {showResult ? (\r\n          <QuizResult\r\n            score={score}\r\n            totalScore={QuizData.length}\r\n            tryAgain={resetAll}\r\n          />\r\n        ) : (\r\n          <>\r\n            <div className=\"question\">\r\n              <span id=\"question-number\">{currentQuestion + 1}. </span>\r\n              <span id=\"question-txt\">\r\n                {QuizData[currentQuestion].question}\r\n              </span>\r\n            </div>\r\n            <div className=\"option-container\">\r\n              {QuizData[currentQuestion].options.map((option, i) => {\r\n                return (\r\n                  <button\r\n                    // className=\"option-btn\"\r\n                    className={`option-btn ${\r\n                      clickedOption == i + 1 ? \"checked\" : null\r\n                    }`}\r\n                    key={i}\r\n                    onClick={() => setClickedOption(i + 1)}\r\n                  >\r\n                    {option}\r\n                  </button>\r\n                );\r\n              })}\r\n            </div>\r\n            <input\r\n              type=\"button\"\r\n              value=\"Next\"\r\n              id=\"next-button\"\r\n              onClick={changeQuestion}\r\n            />\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Quiz;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}